# Скопируйте решение из предыдущей задачи(Maze-1) и адаптируйте под текущий лабиринт
# Чем меньше пришлось вносить изменений в код программы, тем лучше было решение предыдущей задачи

graph = [
    [1],
    [0, 2],
    [1, 3],
    [2, 7],
    [5],
    [4, 6],
    [5],
    [3, 11],
    [9, 12],
    [8, 10],
    [9, 11],
    [10, 7, 15],
    [8, 13],
    [12, 14],
    [13],
    [11],
]


def dfs(v):
    visited[v] = True
    for w in graph[v]:
        if not visited[w]:  # посещён ли текущий сосед?
            dfs(w)


starts = [[1, 'S-1'], [5, 'S-2'], [15, 'S-3']]
finish = 14
for start in starts:
    visited = [False] * (len(graph))
    dfs(start[0])
    if visited[finish]:
        print(f'Из точки {start[1]} можно дойти до финиша')
    else:
        print(f'Из точки {start[1]} нельзя дойти до финиша')
