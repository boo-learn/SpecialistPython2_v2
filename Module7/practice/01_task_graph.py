# "Лабиринт"
# см. Картинку на гугло-диске в Модуле-7
# P-1, P-2 … - точки старта
# Определите: Из каких точек можно дойти до выхода(F), а из каких нет

# Сюда отправляем полное решение
graph = [
    # список смежности
    [1],  # 0
    [0, 2, 3],  # 1
    [1],  # 2
    [1, 4, 7, 8],  # 3
    [3, 5, 6],  # 4
    [4],  # 5
    [4],  # 6
    [3],  # 7
    [3, 9, 10, 13],  # 8
    [8],  # 9
    [8, 11, 12],  # 10
    [10],  # 11
    [10],  # 12
    [8],  # 13
    [15],  # 14
    [14],  # 15
]

start = [0, 4, 12, 14]
finish = [13]


def dfs(v):
    visited[v] = True
    for w in graph[v]:
        if not visited[w]:  # посещён ли текущий сосед?
            dfs(w)


for el_st in start:
    visited = [False] * (len(graph))
    prev = [None] * (len(graph))
    dfs(el_st)
    for el_fin in finish:
        if visited[el_fin]:
            print(f'До точки финиша {el_fin} можно добраться из точки старта {el_st}')
        else:
            print(f'До точки финиша {el_fin} нельзя добраться из точки старта {el_st}')
