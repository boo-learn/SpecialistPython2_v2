# Выверите и скопируйте сюда наиболее подходяший алгоритм для работы с графом(bfs/dfs)

# Опишите список смежности по изображению лабиринта из файла task.md
graph = [
    [1], #0
    [0, 5], #1
    [6], #2
    [7], #3
    [5, 8], #4
    [1, 4], #5
    [2, 10], #6
    [3], #7
    [4, 9, 12], #8
    [8, 10], #9
    [6, 9, 11, 14], #10
    [10], #11
    [8], #12
    [], #13
    [10, 15], #14
    [14], #15
]

# Решите задачу и выведите ответ в нужном формате: из точки Х можно дойти до финиша или нельзя дойти до финиша
visited = [False] * (len(graph))
prev = [None] * (len(graph))
start = int(input('Введите точку старта '))
finish = 14

def dfs(v):
    visited[v] = True
    for w in graph[v]:
        if visited[w] == False:  # посещён ли текущий сосед?
            dfs(w)

dfs(start)
# print(visited)
if visited[finish + 1] == True:
    print(f'Из точки {start} можно дойти до финиша')
else:
    print(f'Из точки {start} нельзя дойти до финиша')
